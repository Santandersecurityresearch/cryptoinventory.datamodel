{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Santander's Cryptographic Object Validator for CMDB - CycloneDX 1.6 version compatible",
    "description": "Extra validations for a certificate object based in CycloneDX 1.6 CBOM definition",
    "type": "object",
    "required": ["metadata", "components"],
    "properties": {
        "metadata": {
            "type": "object",
            "title": "BOM Metadata Object",
            "required": ["timestamp","component","properties"],
            "additionalProperties": false,
            "properties":{
                "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "title": "The timestamp of the asset creation"
                },
                "component": {
                    "type": "object",
                    "required": [
                        "type",
                        "name",
                        "cryptoProperties",
                        "hashes"
                    ],
                    "hashes": {
                        "type": "array",
                        "title": "The fingerprint(s) of the certificate",
                        "minItems": 1
                    },
                    "properties": {
                        "cryptoProperties": {
                            "properties": {
                                "certificateProperties": {
                                    "properties":  {
                                        "certificateFormat": {
                                            "type": "string",
                                            "enum": [
                                                "X.509v3",
                                                "X.509v2",
                                                "X.509",
                                                "CVC"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "properties": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "oneOf": [
                                    { "$ref": "#/definitions/serialNumber40" },
                                    { "$ref": "#/definitions/state" },
                                    { "$ref": "#/definitions/x509v3ext_basicConstraints_CA" },
                                    { "$ref": "#/definitions/x509v3ext_keyUsage" },
                                    { "$ref": "#/definitions/x509v3ext_extendedKeyUsage" },
                                    { "$ref": "#/definitions/x509v3ext_subjectAlternativeName" },
                                    { "$ref": "#/definitions/x509v3ext_authorityKeyIdentifier" },
                                    { "$ref": "#/definitions/x509v3ext_subjectKeyIdentifier" },
                                    { "$ref": "#/definitions/x509v3ext_authorityInformationAccess" },
                                    { "$ref": "#/definitions/x509v3ext_certificatePolicies" },
                                    { "$ref": "#/definitions/x509v3ext_crlDistributionPoints" },
                                    { "$ref": "#/definitions/signatureAlgorithms" },
                                    { "$ref": "#/definitions/certificateEncoding" },
                                    { "$ref": "#/definitions/tacticalKeys" }
                                ]
                            },
                            "required": ["serialNumber"]
                        }
                    }
                },
                "properties": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "oneOf": [
                            { "$ref": "#/definitions/keyProperties" },
                            { "$ref": "#/definitions/certificateManagementProperties" }
                        ]
                    }
                }
            }
        },
        "components": {
            "type": "array",
            "minItems": 1,
            "items": {
                "oneOf": [
                    {"$ref": "#/definitions/applicationRef"},
                    {"$ref": "#/definitions/keyRef"}
                ]
            }
        }
    },
    "definitions": {
        "20BytesHex":{
            "type": "string",
            "definition": "A 20 bytes number, represented as an hexadecimal string, with or without bytes separators (:)",
            "examples": [
                "18:C9:09:8E:06:01:9C:25:AF:B5:A3:DB:C0:C9:91:C8:F5:62:1C:C1",
                "18C9098E06019C25AFB5A3DBC0C991C8F5621CC1"
            ],
            "pattern": "^(([0-9a-fA-F]{2}:){19}[0-9a-fA-F]{2})|([0-9a-fA-F]{40})$"
        },
        "keyProperties": {
            "type": "object",
            "properties": {
                "purpose": {
                    "type": "string",
                    "title": "The usage of the key",
                    "enum": [
                        "Master Key File (MFK)",
                        "Platform Master Key (PMK)",
                        "Futurex Token Key (FTK)",
                        "Key Exchange Key (KEK)",
                        "Backup Encryption Key (BEK)",
                        "Local Master Key (LMK)",
                        "Zone Master Key (ZMK) and KEK",
                        "Terminal Master Key (TMK)",
                        "Terminal Pin Key (TPK)",
                        "Card Verification Key (CVK)",
                        "Card Verification Value 1 (CVV1)",
                        "Card Verification Value 2 (CVV2)",
                        "Integrated Circuit Card Verification Value (ICVV)",
                        "Cardholder Authentication Verification Value (CAVV)",
                        "Zone Pin Key (ZPK)",
                        "Master Derivation Key (MDK) - (Auth/Mac/Enc)",
                        "Unique DEA Key (UDK) - (Auth/Mac/Enc)",
                        "Pin Verification Key (PVK)",
                        "Database Master Key",
                        "Session Key"
                    ]
                }
            },
            "required": ["purpose"]
        },
        "certificateManagementProperties": {
            "type": "object",
            "oneOf": [
                { "$ref": "#/definitions/managementDate" },
                { "$ref": "#/definitions/retirementReason" }
            ],
            "additionalItems": false
        },
        "applicationRef": {
            "type": "object",
            "title": "Reference of the application in CMDB. Possibly with an empty reference",
            "properties": {
                "type": {
                    "type": "string",
                    "pattern": "^application$"
                },
                "name": {
                    "type": "string"
                },
                "bom-ref": {
                    "type": "string"
                }
            },
            "required": ["type"]
        },
        "keyRef": {
            "type": "object",
            "title": "Reference to a key. Mainly used to validate the algorithm part. Possibly with an empty reference",
            "properties":{
                "properties": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 1,
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "pattern": "^crypto-asset$"
                            },
                            "algorithm": {
                                "type": "string",
                                "title": "The algorithm used to generate this key",
                                "enum": [
                                    "ML-DSA",
                                    "SLH-DSA",
                                    "ECDSA",
                                    "EdDSA",
                                    "RSA",
                                    "DSA"
                                ]
                            }
                        }
                    }
                }
            },
            "required": ["type", "properties"]
        },
        "serialNumber40": {
            "type": "object",
            "title": "The serial number of the certificate",
            "definition": "A 40 character hexadecimal string. May be in groups of bytes separated by colons, or not",
            "properties": {
                "name": {
                    "type": "string",
                    "pattern": "^serialNumber$"
                },
                "value": {
                    "$ref":"#/definitions/20BytesHex"
                }
            }
        },
        "state": {
            "type": "object",
            "title": "The state of the certificate",
            "properties":{
                "name": {
                    "type": "string",
                    "title": "The name of the state",
                    "pattern": "^state$"
                },
                "value": {
                    "type": "string",
                    "title": "The state of the certificate",
                    "description": "Possible states for a certificate: the revocation is managed as a retirement and it is distinguished by its retirementReason.",
                    "enum": [
                        "pre-operational",
                        "operational",
                        "retired",
                        "suspended",
                        "destroyed"
                    ]
                }
            }
        },
        "managementDate": {
            "type": "object",
            "title": "Some of the management dates for the certificate",
            "properties":{
                "name": {
                    "type": "string",
                    "title": "The name of the date",
                    "enum": [
                        "receivedDate",
                        "updatedDate",
                        "installedDate",
                        "availableDate",
                        "removalDate",
                        "revocationDate"
                    ]
                },
                "value": {
                    "type": "string",
                    "title": "The date of the event",
                    "format": "date-time"
                }
            }
        },
        "retirementReason":{
            "type": "object",
            "title": "The reason for which the certificate was revoked",
            "properties": {
                "name": {
                    "type": "string",
                    "title": "The name of the reason",
                    "pattern": "^retirementReason$"
                },
                "value": {
                    "type": "string",
                    "title": "The reason for which the certificate was revoked",
                    "enum": [
                        "expired",
                        "revokedKeyCompromise",
                        "revokedAdministrativeReason"
                    ]
                }
            }
        },
        "x509v3ext_basicConstraints_CA": {
            "type": "object",
            "title": "Basic Constraints - CA",
            "description": "Specifies wether a certificate can be used as a CA certificate or not",
            "properties":{
                "name": {
                    "type": "string",
                    "pattern": "^x509v3ext_basicConstraints_CA$"
                },
                "value": {
                    "type": "string",
                    "title": "The boolean indicating wether the certificate can be used as a CA or not",
                    "definition": "Created as a string due to CBOM restrictions for the extende properties",
                    "enum": [
                        "true",
                        "false"
                    ]
                }
            }
        },
        "x509v3ext_keyUsage": {
            "type": "object",
            "title": "Extended Property: Key Usage",
            "description": "Specifies the allowed uses of the public key in the certificate",
            "properties":{
                "name": {
                    "type": "string",
                    "pattern": "^x509v3ext_keyUsage$"
                },
                "value": {
                    "type": "string",
                    "title": "List of possible key ussages",
                    "examples": ["Digital signature, Key encipherment"]
                }
            } 
        },
        "x509v3ext_extendedKeyUsage": {
            "type": "object",
            "title": "Extended Property: Extended key Usage",
            "description": "Specifies the additional purposes for which the public key can be used",
            "properties":{
                "name": {
                    "type": "string",
                    "pattern": "^x509v3ext_extendedKeyUsage$"
                },
                "value": {
                    "type": "string",
                    "title": "List of possible extended key ussages",
                    "examples": ["TLS web server authentication"]
                }
            } 
        },
        "x509v3ext_subjectAlternativeName": {
            "type": "object",
            "title": "Extended Property: Subject Alternative Name",
            "description": "Allows inclusion of additional names to identify the entity associated with the certificate",
            "properties":{
                "name": {
                    "type": "string",
                    "pattern": "^x509v3ext_subjectAlternativeName$"
                },
                "value": {
                    "type": "string",
                    "title": "List of possible names to identify the entity associated with the certificate",
                    "examples": ["DNS:test.participate.preprod.fdefi.co.uk"]
                }
            } 
        },
        "x509v3ext_authorityKeyIdentifier": {
            "type": "object",
            "title": "Extended Property: Authority Key Identifier",
            "description": "Identifies the public key of the CA that issued the certificate",
            "properties":{
                "name": {
                    "type": "string",
                    "pattern": "^x509v3ext_authorityKeyIdentifier$"
                },
                "value": {
                    "$ref":"#/definitions/20BytesHex"
                }
            } 
        },
        "x509v3ext_subjectKeyIdentifier": {
            "type": "object",
            "title": "Extended Property: Subject key Identifier",
            "description": "Identifies the public key associated with the entity the certificate was issued to",
            "properties":{
                "name": {
                    "type": "string",
                    "pattern": "^x509v3ext_subjectKeyIdentifier$"
                },
                "value": {
                    "$ref":"#/definitions/20BytesHex"
                }
            } 
        },
        "x509v3ext_authorityInformationAccess": {
            "type": "object",
            "title": "Extended Property: Authority Information Access (AIA)",
            "description": "Contains CA issuers and OCSP information",
            "properties":{
                "name": {
                    "type": "string",
                    "pattern": "^x509v3ext_authorityInformationAccess$"
                },
                "value": {
                    "type": "string",
                    "example": "CA Issuers - URI:http://crl.non-prod-pki.fdefi.co.uk/tlsR1/cert.cer"
                }
            } 
        },
        "x509v3ext_certificatePolicies": {
            "type": "object",
            "title": "Extended Property: Certificate Policies",
            "description": "Defines the policies under which the certificate was issued and can be used",
            "properties":{
                "name": {
                    "type": "string",
                    "pattern": "^x509v3ext_certificatePolicies$"
                },
                "value": {
                    "type": "string",
                    "example": "CPS: http://crlCA.gsnetclout.com/pki/InternalCPS.txt"
                }
            }
        },
        "x509v3ext_crlDistributionPoints": {
            "type": "object",
            "title": "Extended Property: CRL Distribution Points",
            "description": "Contains one or more URLs where a Certificate Revocation List (CRL) can be obtained",
            "properties":{
                "name": {
                    "type": "string",
                    "pattern": "^x509v3ext_crlDistributionPoints$"
                },
                "value": {
                    "type": "string",
                    "example": "URI:http://crlCA.cloud.corp/pki/Santander%20CA%20Root(2).crt, URI:http://crlCA.gsnetcloud.com/pki/Santander%20CA%20Root(2).crt"
                }
            }
        },
        "signatureAlgorithms": {
            "type": "object",
            "title": "List of signature algorithms, split by commas",
            "description": "Contains one or more (for hybrid certs) signature algorithms",
            "properties":{
                "name": {
                    "type": "string",
                    "pattern": "^signatureAlgorithms$"
                },
                "value": {
                    "type": "string",
                    "example": "ecdsa-with-SHA256, sha256WithRSAEncryption"
                }
            }
        },
        "certificateEncoding": {
            "type": "object",
            "title": "Certificate Encoding",
            "description": "Encoding used to deliver the certificate",
            "properties":{
                "name": {
                    "type": "string",
                    "pattern": "^certificateEncoding$"
                },
                "value": {
                    "type": "string",
                    "enum": [
                        "PEM",
                        "PKCS#7/P7B",
                        "DER",
                        "PKCS#12/PFX"
                    ]
                }
            }
        },
        "tacticalKeys": {
            "type": "object",
            "title": "Tactical Keys definition",
            "description": "List of possible keys, split by commas. Tactical solution until we get keys inventoried. Values are not validated at this level because it is a temporary solution. The goal is to use the components array to link to all the necessary keys there",
            "properties":{
                "name": {
                    "type": "string",
                    "pattern": "^keys$"
                },
                "value": {
                    "type": "string",
                    "example": "224-255 bits - EdDSA, 4096 - DSA"
                }
            }
        }
    }
}